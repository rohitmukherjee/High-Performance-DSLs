"parahip"=>
		["simple.ss",2,  "--en-para -tp parahip --en-lsmu-infer --en-thrd-and-conj", "func","SUCCESS","main","SUCCESS"],
		["forkjoin.ss",2,  "--en-para -tp parahip --en-lsmu-infer --en-thrd-and-conj", "func","SUCCESS","main","SUCCESS"],
		["cell.ss",2,  "--en-para -tp parahip --en-lsmu-infer --en-thrd-and-conj", "test","SUCCESS","test1","FAIL"],
		["cell4.ss",2,  "--en-para -tp parahip --en-lsmu-infer --en-thrd-and-conj", "inc","SUCCESS","main","SUCCESS"],
		["cell-lock-vperm.ss",2,  "--en-para -tp parahip --en-lsmu-infer --en-thrd-and-conj", "testCell","SUCCESS","testVar","FAIL"],
		["cell-extreme-cases.ss",4,  "--en-para -tp parahip --en-lsmu-infer --en-thrd-and-conj", "test","FAIL","test2","FAIL","test3","FAIL","test4","FAIL"],
		["ls-bind.ss",2,  "--en-para -tp parahip --en-lsmu-infer --en-thrd-and-conj", "func","SUCCESS","main","SUCCESS"],
		["ls-waitlevel2.ss",3,  "--en-para -tp parahip --en-lsmu-infer --en-thrd-and-conj", "func2","SUCCESS","func3","SUCCESS","func4","SUCCESS"],
		["double-acquire.ss",2,  "--en-para -tp parahip --en-lsmu-infer --en-thrd-and-conj", "func","SUCCESS","main","FAIL"],
		["no-deadlock1.ss",2,  "--en-para -tp parahip --en-lsmu-infer --en-thrd-and-conj", "func","SUCCESS","main","SUCCESS"],
		["no-deadlock2.ss",2,  "--en-para -tp parahip --en-lsmu-infer --en-thrd-and-conj", "func","SUCCESS","main","SUCCESS"],
		["no-deadlock3.ss",2,  "--en-para -tp parahip --en-lsmu-infer --en-thrd-and-conj", "func","SUCCESS","main","SUCCESS"],
		["deadlock1.ss",2,  "--en-para -tp parahip --en-lsmu-infer --en-thrd-and-conj", "func","SUCCESS","main","FAIL"],
		["deadlock2.ss",2,  "--en-para -tp parahip --en-lsmu-infer --en-thrd-and-conj", "func","SUCCESS","main","FAIL"],
		["deadlock3.ss",2,  "--en-para -tp parahip --en-lsmu-infer --en-thrd-and-conj", "func","SUCCESS","main","FAIL"],
		["disj-no-deadlock1.ss",2,  "--en-para -tp parahip --en-lsmu-infer --en-thrd-and-conj", "func","SUCCESS","main","SUCCESS"],
		["disj-no-deadlock2.ss",2,  "--en-para -tp parahip --en-lsmu-infer --en-thrd-and-conj", "func","SUCCESS","main","SUCCESS"],
		["disj-no-deadlock3.ss",2,  "--en-para -tp parahip --en-lsmu-infer --en-thrd-and-conj", "func","SUCCESS","main","SUCCESS"],
		["disj-deadlock.ss",2,  "--en-para -tp parahip --en-lsmu-infer --en-thrd-and-conj", "func","SUCCESS","main","FAIL"],
		["ordered-locking.ss",2,  "--en-para -tp parahip --en-lsmu-infer --en-thrd-and-conj", "func","SUCCESS","main","SUCCESS"],
		["unordered-locking.ss",2,  "--en-para -tp parahip --en-lsmu-infer --en-thrd-and-conj", "func","FAIL","main","SUCCESS"],
		["multicast.ss",2,  "--en-para -tp parahip --en-lsmu-infer --en-thrd-and-conj", "initialize","SUCCESS","thread","SUCCESS"],
		["oracle.ss",2,  "--en-para -tp parahip --en-lsmu-infer --en-thrd-and-conj", "thread","SUCCESS","main","SUCCESS"],
		["owicki-gries.ss",3,  "--en-para -tp parahip --en-lsmu-infer --en-thrd-and-conj", "incrementor2","SUCCESS","incrementor1","SUCCESS","main","SUCCESS"],
		["fibonacci.ss",2,  "--en-para -tp parahip --en-lsmu-infer --en-thrd-and-conj", "seq_fib","SUCCESS","para_fib","SUCCESS"],
		["create_and_acquire.ss",1,  "--en-para -tp parahip --dis-locklevel --en-thrd-and-conj", "create_and_acquire","SUCCESS"],
