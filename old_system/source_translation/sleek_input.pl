 "sleek"=>[           
                      ["sleek.slk", "",(), "Valid.Valid.Valid.Fail."],
                      ["cll-d.slk", "", (), "Valid."],
                      ["label-basic.slk", "--dis-eps", (), "Fail.Valid.Valid.Fail."],
                      ["label-dll.slk", "--dis-eps", (), "Fail.Valid.Valid.Valid."],
                      ["sleek1.slk", "", (), "Fail."],
                      ["sleek10.slk", "", (), "Valid.Fail."],
                      ["sleek2.slk", "", (), "Fail.Valid.Fail.Fail.Valid.Valid.Valid.Fail."],
                      ["sleek3.slk", "--elp", ([$lem,"Valid."]), "Valid.Fail.Valid."],
                      ["sleek4.slk", "", (), "Valid.Valid."],
                      ["sleek6.slk", "", (), "Valid.Valid."],
                      ["sleek7.slk", " --dis-lem-gen ", ([$lem,"Valid."]), "Valid.Valid.Valid.Fail.Valid.Valid.Valid.Valid.Fail.Valid."],
                      ["sleek8.slk", " --dis-lem-gen ", ([$lem,"Valid."]), "Valid.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Fail.Valid.Valid.Valid.Valid.Fail.Valid.Fail."],
                      ["sleek8.slk", " --elp ", ([$lem,"Valid."]), "Valid.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Fail.Valid.Valid.Valid.Valid.Fail.Valid.Fail."],
                      ["sleek9.slk", " --elp ", ([$lem,"Valid.Valid."]),"Valid.Fail.Valid.Valid."],
                      ["sleek12-lend.slk", "", (), "Valid.Fail.Valid."],
                      ["sleek13-lend.slk", "", (), "Valid.Valid.Valid.Fail."],
                      ["lst-under1.slk", "--inv-test", ([$inv,"Valid.Fail."]), "Valid.Fail."],
                      ["lst-under2.slk", "--inv-test", ([$inv,"Fail.Valid"]), "Valid.Fail."],
                      ["ll-under1a.slk", " --inv-test --baga-xpure ", ([$inv,"Valid.Valid."]), ""],
                      ["ll-under1b.slk", " --inv-test --baga-xpure ", ([$inv,"Fail.Valid."]), ""],
                      ["ll-under1c.slk", " --inv-test --baga-xpure ", ([$inv,"Valid.Fail."]), ""],
                      ["ll-under1d.slk", " --inv-test --baga-xpure ", ([$inv,"Valid.Valid."]), ""],
                      ["ll-under1e.slk", " --inv-test --baga-xpure ", ([$inv,"Fail.Fail."]), ""],
                      ["ll-under1f.slk", " --inv-test --baga-xpure ", ([$inv,"Valid.Fail."]), ""],
                      ["baga-test-eps.slk", "--eps", (),"Fail.Fail.Valid.Valid.Fail.Valid.Valid.Fail.Fail.Valid.Fail.Fail.Valid.Valid.Valid."],
                      ["baga-test.slk", "", (),"Fail.Fail.Valid.Valid.Fail.Valid.Valid.Fail.Fail.Valid.Fail.Fail.Valid.Valid.Valid."],
                      ["baga-test-2.slk", "--dis-baga-xpure --dis-eps", (),"Fail.Fail.Valid.Valid.Fail.Valid.Valid.Fail.Fail.Valid.Fail.Fail.Valid.Valid.Fail."],
                      ["baga-test-2.slk", "--baga-xpure", (),"Fail.Fail.Valid.Valid.Fail.Valid.Valid.Fail.Fail.Valid.Fail.Fail.Valid.Valid.Valid."],
                      ["symb-diff.slk", "", (), "Valid.Valid.Valid."],
		                  ["xpure3nodes.slk","",(),"Valid.Valid."],
                      ["infer/app-inv.slk", "--inv --dis-eps", (), "Valid.Valid.Fail.Valid.Valid.Valid."],
                      ["infer/app-inv2.slk", "--inv --dis-eps", (), "Valid.Valid.Valid.Fail."],
                      ["infer/infer1.slk", "", (), "Valid.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Fail.Valid.Valid.Valid.Valid."],
                      ["infer/infer2.slk", "", (), "Valid.Valid.Valid.Fail.Valid.Fail.Valid.Valid.Fail."],
                      ["infer/infer4.slk", "", (), "Fail.Fail.Valid"],
                      ["infer/infer5.slk", "", (), "Valid.Valid.Fail.Valid."],
                      ["infer/infer5a.slk", "", (), "Fail.Valid."],
                      ["infer/infer6.slk", "", (), "Valid."],
                      ["infer/infer7.slk", "", (), "Valid.Valid.Valid.Valid.Fail.Valid.Valid.Valid.Fail.Valid."],
                      ["infer/infer8.slk", "", (), "Valid.Valid.Valid.Fail.Fail.Valid.Valid.Fail.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Fail.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Fail.Fail.Fail.Valid.Valid.Valid."],
                      ["infer/infer9.slk", "", (), "Valid.Valid.Valid.Valid.Valid.Fail.Valid.Fail.Valid.Valid."],
                      ["infer/infer10.slk", "", (), "Valid.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Fail.Valid.Fail.Fail.Fail.Valid."],
                      ["infer/infer11.slk", "", (), "Fail."],
                      ["infer/infer12.slk", "", "", "Valid.Fail.Fail.Fail.Fail.Valid.Fail.Fail.Fail.Fail.Fail.Valid.Fail.Fail.Fail.Valid.Valid.Valid."],
                      ["infer/infer12.slk", "", (), "Valid.Fail.Valid.Fail.Fail.Valid.Valid.Valid.Valid.Fail.Fail.Valid.Fail.Fail.Fail.Valid.Valid.Valid."],
                      ["infer/infer13.slk", "--sa-en-cont", (), "Valid.Valid.Valid.Valid.Valid."],
                      ["infer/infer14.slk", "--sa-en-pure-field", (), "Valid.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Fail.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Valid."],
                      ["infer/infer15.slk", "", (), "Valid.Valid.Valid.Valid.Valid.Valid.Valid."],
                      ["infer/infer16.slk", "", (), "Valid.Valid.Valid.Valid.Valid.Valid."],
                      ["ann2.slk", " --imm --en-imm-inv --etcsu1 ", (), "Valid.Valid.Valid.Fail.Valid.Valid.Fail.Fail.Valid.Valid.Valid.Valid.Valid.Fail.Fail.Valid.Fail.Valid.Fail.Fail.Valid.Valid.Valid.Fail.Fail."],
                      ["imm/imm1.slk", " --imm --etcsu1 ", (), "Fail.Valid.Valid.Valid.Valid.Valid."],
                      ["imm/imm2.slk", " --imm --etcsu1 ", (), "Fail.Valid.Fail.Valid.Fail."],
                      ["imm/imm3.slk", " --imm --etcsu1 ", (), "Fail.Fail.Valid.Valid.Valid."],
                      ["imm/imm4.slk", " --imm --etcsu1 ", (), "Valid.Fail."],
                      ["imm/imm-hard.slk", " --imm --eps", "", "Valid.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Valid."],
                      ["imm-field/sleek01.slk", " --field-ann --etcsu1 ", (), "Valid.Valid.Valid.Fail.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Fail."],
                      ["imm-field/sleek02.slk", " --field-ann --etcsu1 ", (), "Fail.Valid.Valid.Valid.Valid.Valid.Valid.Fail.Valid.Valid.Valid.Valid.Fail."],
                      ["imm-field/sleek03.slk", " --field-ann --etcsu1 ", (), "Valid.Fail.Valid.Valid.Fail.Valid.Valid.Fail.Valid.Valid.Fail."],
                      ["eps.slk", " --dis-imm ", "", "Valid."],
                      ["imm-field/sleek05.slk", " --field-ann --etcsu1 ", (), "Valid.Fail.Fail.Fail.Fail.Fail.Valid.Valid.Valid"],
                      ["classic/classic1.slk", "", (), "Valid.Valid.Valid.Valid.Valid.Valid.Fail.Fail."],
                      ["classic/classic1.slk", " --classic", (), "Fail.Valid.Valid.Valid.Fail.Valid.Fail.Fail."],
                      ["classic/classic1a.slk", "", (), "Fail.Valid.Fail.Valid.Valid.Valid.Fail.Fail.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Fail."],
                      ["classic/classic1b.slk", "", (), "Valid.Valid.Valid.Valid.Valid.Valid.Fail.Fail.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Fail.Fail.Valid.Fail.Valid.Valid.Fail.Fail.Valid.Fail."],
                      ["classic/classic2.slk", "", (), "Fail.Valid.Valid.Valid.Fail.Valid.Fail.Fail."],
                      ["classic/classic3.slk", "", (), "Valid.Valid.Valid.Valid.Valid.Valid.Fail.Fail."],
                      ["classic/classic4.slk", "", (), "Valid.Fail.Valid.Fail.Valid.Fail.Valid.Fail."],
                      ["inf-no-eps.slk","--dsd --en-inf --dis-eps",(),"Fail.Fail.Valid.Valid."],
                      ["infinity.slk","--dsd --en-inf --dis-eps",(), "Fail.Valid.Valid.Fail.Valid.Valid.Fail.Valid.Valid.Valid.Fail.Valid.Valid.Fail.Fail.Valid.Fail.Valid.Fail.Fail.Valid.Valid.Fail.Valid.Fail.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Fail.Valid.Valid.Fail.Valid.Fail.Valid.Valid.Valid.Fail.Fail.Valid.Fail.Fail.Valid.Valid.Valid.Valid.Valid.Fail.Fail.Valid.Valid.Valid.Fail.Valid.Valid.Valid.Valid.Valid.Fail.Valid.Fail.Valid.Valid.Valid.Valid.Valid."],
                      ["inflem.slk", " --en-inf --elp --dis-eps", ([$lem,"Valid."]), "Fail.Valid."],
                      ["lemmas/sort2.slk", " --elp --dis-lem-gen ", ([$lem,"Fail.Valid.Valid.Valid.Valid.Fail.Valid.Valid.Fail.Valid."]), ""],
                      ["lemmas/lseg.slk", " --elp --dis-lem-gen ", ([$lem,"Valid.Valid.Valid.Valid."]), ""],
                      ["lemmas/lseg1.slk", " --elp --dis-lem-gen ", ([$lem,"Valid."]), ""],
                      ["lemmas/rlseg.slk", " --elp --dis-lem-gen", ([$lem,"Valid.Valid.Valid."]), ""],
                      ["lemmas/lemma-fold.slk", " --elp ", ([$lem,"Valid."]),"Valid.Fail.Valid.Fail.Valid.Fail."],
                      ["lemmas/rd-lem-1.slk", " --elp --dis-lem-gen ", ([$lem,"Fail.Valid."]),""],
                      ["lemmas/rd-lem-2.slk", "", (), "Fail."],
                      ["lemmas/app-tail.slk", " --elp ", ([$lem,"Valid.Valid."]),"Valid.Fail."],
                      ["lemmas/lseg_case.slk", " --elp --dis-lem-gen ", ([$lem,"Valid.Valid.Valid.Valid.Valid.Valid."]), ""],
                      ["lemmas/ll.slk", " --elp ", ([$lem,"Valid.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Valid."]), "Valid.Fail."],
                      ["lemmas/ll_tail.slk", " --elp ", ([$lem,"Valid.Valid"]), "Valid.Valid"],
                      ["lemmas/nlseg3.slk", "", (), "Valid.Valid."],
                      ["lemmas/nlseg4e.slk", " --elp ", ([$lem,"Valid.Valid"]), ""],
                      ["lemmas/nlseg4e1.slk", "--dis-imm", (), "Valid.Valid.Valid.Fail.Valid.Valid.Valid.Valid."],
                      ["lemmas/sll_tailL.slk", " --elp ", ([$lem,"Valid.Valid"]), ""],
        ["lemmas/dseg-new.slk", " --elp --dis-lem-gen ", ([$lem,"Valid.Fail.Valid."]), ""],
        # 2nd lemma requires another rlseg<..> <--> lseg to prove..
        ["lemmas/dseg1.slk", " --elp --dis-lem-gen ", ([$lem,"Valid.Fail."]), ""],
        # loop with --eps. Why?
        ["lemmas/odd-lseg.slk", " --elp --dis-lem-gen --dis-eps", ([$lem,"Valid.Valid."]), "Fail.Valid.Valid.Fail.Valid.Fail.Valid"],
        ["lemmas/lseg_complex.slk", " --elp --dis-lem-gen ", ([$lem,"Valid.Valid.Valid"]), "Valid.Valid.Fail."],
              ["fracperm/split_simple.slk","--en-para -perm fperm -tp redlog", (), "Valid.Fail.Valid.Fail.Fail.Valid.Valid.Valid."],
              ["fracperm/split-combine.slk","--en-para -perm fperm -tp redlog", (), "Valid.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Valid."],
              ["vperm/vperm.slk"," --ann-vp", (), "Valid.Valid.Fail.Valid.Valid.Fail.Fail.Fail.Valid.Valid.Valid."],
              ["veribsync/bperm-split-combine.slk","--en-para -perm bperm -tp redlog", (), "Valid.Valid.Valid.Valid.Valid.Valid."],
              ["veribsync/barrier-static.slk","--en-para -perm bperm -tp redlog", (), "Valid.Valid.Valid.Valid.Valid."],
              ["veribsync/barrier-dynamic2.slk","--en-para -perm bperm -tp redlog", (), "Valid.Fail.Valid.Valid.Valid.Valid.Valid.Valid.Fail.Valid.Valid.Fail.Valid.Valid.Valid.Fail.Fail.Valid.Valid.Valid.Fail.Valid.Valid.Valid.Valid.Valid.Valid."],
              ["threads/thrd1.slk"," --en-para --en-thrd-resource -tp redlog", "", "Valid.Valid.Valid.Valid.Valid.Valid.Fail.Valid.Fail.Valid.Fail.Fail.Fail.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Valid"],
              ["conchip/threads.slk"," -tp parahip", "", "Valid.Valid.Valid"],
              ["conchip/latch.slk"," -tp parahip", "", "Valid.Valid.Valid.Valid.Valid.Fail.Valid.Fail"],
                      ],
      "sleek_barr"=>[
              ["../tree_shares/barrier.slk", "--eps --dis-field-ann --dis-precise-xpure -perm dperm", "Barrrier b1n Success.Barrrier b3n Fail:  frames do not match (1->2).Barrrier b2n Fail:  contradiction in post for transition (1->2).Barrrier b4n Fail:  no contradiction found in preconditions of transitions from 1  for preconditions: .", ""],
        			  ["../tree_shares/barrier3.slk", "--eps --dis-field-ann --dis-precise-xpure -perm dperm", "Barrrier b1n Success.Barrrier b3n Fail:  frames do not match (1->2).Barrrier b2n Fail:  contradiction in post for transition (1->2).", ""]
        			 ],
        	"sleek_dfrac"=>[["../tree_shares/fractionals.slk", "--eps --dis-field-ann -perm dperm",(), "Valid.Valid.Valid.Valid.Valid.Valid.Fail.Valid.Fail."],
        			  ["../tree_shares/barrier2.slk", "--eps --dis-field-ann -perm dperm",(), "Valid.Valid.Valid.Valid.Valid.Valid.Fail.Valid.Fail."],
        			  ["../tree_shares/fractions.slk", "--eps --dis-field-ann -perm dperm",(), "Valid.Fail.Valid.Fail.Fail.Fail.Valid.Valid.Fail.Fail.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Fail.Valid.Fail.Valid.Fail.Valid.Valid.Valid.Fail.Valid.Valid.Valid.Fail.Valid.Valid.Valid.Valid.Valid.Valid.Fail.Valid.Valid.Fail.Fail.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Fail.Valid.Fail."]
                 ],
    "sleek_threads" => 
    [
                      ["threads/thrd1.slk"," --en-para --en-thrd-resource -tp redlog", "", "Valid.Valid.Valid.Valid.Valid.Valid.Fail.Valid.Fail.Valid.Fail.Fail.Fail.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Valid"]
    
                 ],
    "sleek_vperm" => [
                      ["vperm/vperm.slk"," --ann-vp", (), "Valid.Valid.Fail.Valid.Valid.Fail.Fail.Fail.Valid.Valid.Valid."],
                      ["vperm/vperm2.slk"," --ann-vp", (), "Valid.Valid.Fail."]],
        	"sleek_fracperm"=>
                [["fracperm/sleek.slk","--en-para -perm fperm -tp redlog", (),"Valid.Valid.Valid.Fail."],
        				["fracperm/sleek1.slk","--en-para -perm fperm -tp redlog", (), "Fail."],
        				["fracperm/sleek10.slk","--en-para -perm fperm -tp redlog", (), "Valid.Fail."],
        				["fracperm/sleek2.slk","--en-para -perm fperm -tp redlog", (), "Fail.Valid.Fail.Fail.Valid.Valid.Valid.Fail."],
        				["fracperm/sleek3.slk","--en-para -perm fperm -tp redlog", (), "Valid.Fail.Valid."],
        				["fracperm/sleek4.slk","--en-para -perm fperm -tp redlog", (), "Valid.Valid."],
        				["fracperm/sleek6.slk","--en-para -perm fperm -tp redlog", (), "Valid.Valid."],
        				["fracperm/sleek7.slk","--en-para -perm fperm -tp redlog", (), "Valid.Valid.Valid.Fail.Valid.Valid.Valid.Valid.Fail.Valid."],
                  # slow in sleek8.slk due to search
        			  ["fracperm/sleek8.slk","--en-para -perm fperm -tp redlog", (), "Valid.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Fail.Valid.Valid.Valid.Valid.Fail.Valid.Fail."],
        				["fracperm/sleek9.slk","--en-para -perm fperm -tp redlog", (), "Valid.Fail.Valid.Valid."],

                    ["fracperm/norm1.slk","--en-para -perm fperm -tp redlog", (), "Fail.Valid.Fail.Valid."],
        				["fracperm/norm3.slk","--en-para -perm fperm -tp redlog", (), "Fail.Valid.Valid.Valid.Valid.Valid.Valid.Fail."],
        				["fracperm/norm4.slk","--en-para -perm fperm -tp redlog", (),"Valid.Valid.Valid."],
        				["fracperm/uni_vars.slk","--en-para -perm fperm -tp redlog", (), "Valid.Valid.Fail."],
        				["fracperm/frac1.slk","--en-para -perm fperm -tp redlog", (), "Valid.Valid.Valid.Fail.Valid.Valid.Valid.Valid.Valid.Valid.Fail.Valid.Valid."],
        				["fracperm/frac2.slk","--en-para -perm fperm -tp redlog", (), "Valid.Fail.Valid.Valid.Valid.Fail.Fail.Valid.Valid.Fail.Valid.Fail.Fail."],
        				["fracperm/frac3.slk","--en-para -perm fperm -tp redlog", (), "Valid.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Fail.Fail.Fail.Fail.Fail."],
        				["fracperm/split_simple.slk","--en-para -perm fperm -tp redlog", (), "Valid.Fail.Valid.Fail.Fail.Valid.Valid.Valid."],
        				["fracperm/combine_data.slk","--en-para -perm fperm -tp redlog", (), "Valid.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Fail.Valid."],
        				["fracperm/combine_simple.slk","--en-para -perm fperm -tp redlog", (), "Valid.Valid.Fail.Valid.Valid.Valid.Valid."],
        				["fracperm/split-combine.slk","--en-para -perm fperm -tp redlog", (), "Valid.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Valid.Valid."],
                  ["fracperm/combine2.slk","--en-para -perm fperm -tp redlog", (), "Valid.Valid.Valid.Valid."]
           ],
    "sleek_veribsync" => [
                      ["veribsync/bperm1.slk","--en-para -perm bperm -tp redlog", (), "Valid.Fail.Valid.Valid.Valid.Valid.Valid.Fail."],
                      ["veribsync/bperm-split.slk","--en-para -perm bperm -tp redlog", (), "Valid.Valid.Fail.Valid.Valid.Fail.Valid.Valid."],
                      ["veribsync/bperm-combine.slk","--en-para -perm bperm -tp redlog", (), "Valid.Valid.Valid.Valid."],
                      ["veribsync/bperm-split-combine.slk","--en-para -perm bperm -tp redlog", (), "Valid.Valid.Valid.Valid.Valid.Valid."],
                      ["veribsync/barrier1.slk","--en-para -perm bperm -tp redlog", (), "Valid.Fail.Valid.Valid.Valid.Valid.Valid.Fail."],
                      ["veribsync/barrier-split.slk","--en-para -perm bperm -tp redlog", (), "Valid.Valid.Fail.Valid.Valid.Fail.Valid."],
                      ["veribsync/barrier-combine.slk","--en-para -perm bperm -tp redlog", (), "Valid.Valid.Valid.Valid."],
                      ["veribsync/barrier-sep.slk","--en-para -perm bperm -tp redlog", (), "Valid.Valid.Valid."],
                      ["veribsync/barrier-static.slk","--en-para -perm bperm -tp redlog", (), "Valid.Valid.Valid.Valid.Valid."],
                      ["veribsync/barrier-dynamic.slk","--en-para -perm bperm -tp redlog", (), "Valid.Fail.Valid.Valid.Valid.Valid.Valid.Valid.Fail.Valid.Valid.Fail.Valid.Valid.Valid.Fail.Fail.Valid.Valid.Valid.Fail.Valid.Valid.Valid.Valid.Valid.Valid."],
                      ["veribsync/barrier-dynamic2.slk","--en-para -perm bperm -tp redlog", (), "Valid.Fail.Valid.Valid.Valid.Valid.Valid.Valid.Fail.Valid.Valid.Fail.Valid.Valid.Valid.Fail.Fail.Valid.Valid.Valid.Fail.Valid.Valid.Valid.Valid.Valid.Valid."]],