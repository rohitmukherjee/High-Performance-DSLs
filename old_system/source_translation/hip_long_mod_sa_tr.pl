"hip_long_mod"=> 
	["../../modular_examples/sorted_list_modular.ss",8, "--overeps -tp om", "insert_first", "SUCCESS", "copy", "SUCCESS", "delete", "SUCCESS","double_reverse", "SUCCESS", "insert", "SUCCESS", "insert_last", "SUCCESS","merge", "SUCCESS", "reverse","SUCCESS"],
	["../../modular_examples/complete-modular.ss",5, "--overeps", "maxim", "SUCCESS", "height", "SUCCESS", "minim", "SUCCESS","min_height", "SUCCESS", "insert", "SUCCESS"],
"sa"=>
    ["ll-trav.c",1,  "-validate infer/output/sa/ll-trav.cp", "foo","SUCCESS"],
    ["ll-trav-1.c",1,  "-validate infer/output/sa/ll-trav-1.cp", "foo","SUCCESS"],
    ["ll-delete.ss",1,  "-validate infer/output/sa/ll-delete.cp", "whiledel","SUCCESS"],
    ["zip_paper_eq.c",1,  "-validate infer/output/sa/zip_paper_eq.cp", "zip","SUCCESS"],
    ["check-sll-head.c",1,  "-validate infer/output/sa/check-sll-head.cp --pred-dis-seg", "foo","SUCCESS"],
    ["skip2-list.c",2,  "-validate infer/output/sa/skip2-list.cp --pred-en-equiv -tp z3", "skip0","SUCCESS", "skip1","SUCCESS"],
    ["skip3-list.c",3,  "-validate infer/output/sa/skip3-list.cp --pred-en-equiv -tp z3", "skip0","SUCCESS", "skip1","SUCCESS", "skip2","SUCCESS"],
    ["check-sorted.c",1,  "-validate infer/output/sa/check-sorted.cp --sa-en-pure-field -tp z3", "check_sorted","SUCCESS"],
    ["sll-insertsort.c",1,  "-validate infer/output/sa/sll-insertsort.cp -tp z3", "insert","SUCCESS"],
    ["cll.c",1,  "-validate infer/output/sa/cll.cp -tp z3  --pred-en-dangling", "count_rest","SUCCESS"],
    ["check-cll.c",1,  "-validate infer/output/sa/check-cll.cp -tp z3  --pred-en-dangling", "check_csll","SUCCESS"],
    ["sll-01-slls.c",1,  "-validate infer/output/sa/sll-01-slls.cp -tp z3  --pred-en-dangling", "helper","SUCCESS"],
    ["sll-dll.c",1,  "-validate infer/output/sa/sll-dll.cp -tp z3  --pred-en-equiv", "paper_fix","SUCCESS"],
    ["check-dll.c",1,  "-validate infer/output/sa/check-dll.cp -tp z3 ", "check_dll","SUCCESS"],
    ["check-cllclls.c",2,  "-validate infer/output/sa/check-cllclls.cp -tp z3 --pred-en-equiv", "check_csll","SUCCESS", "check_csll_outer","SUCCESS"],
    ["check-cdll5clls.c",2,  "-validate infer/output/sa/check-cdll5clls.cp -tp z3 --pred-en-equiv", "check_csll","SUCCESS", "check_cdll_out1","SUCCESS"],
    ["check-cdllcllsx2.c",3,  "-validate infer/output/sa/check-cdllcllsx2.cp -tp z3 --pred-en-equiv", "check_csll","SUCCESS", "check_csll_outer1","SUCCESS", "check_cdll_outer2","SUCCESS"],
    ["dll-append_paper.c",1,  "-validate infer/output/sa/dll-append_paper.cp -tp z3 ", "dll_append","SUCCESS"],
    ["bt-search-2.c",1,  "-validate infer/output/sa/bt-search-2.cp -tp z3 --pred-unify-post", "search","SUCCESS"],
    ["tll.c",1,  "-validate infer/output/sa/tll.cp -tp z3 --pred-en-equiv", "set_right","SUCCESS"],
    ["rose-tree-1.c",1, "-validate infer/output/sa/rose-tree-1.cp -tp z3 --pred-en-equiv", "check_tree","SUCCESS"],
    ["check-mcf.c",1,  "-validate infer/output/sa/check-mcf.cp -tp z3 ", "check_child","SUCCESS"],
    ["tll-parent.c",1,  "-validate infer/output/sa/tll-parent.cp -tp z3 --pred-en-equiv", "set_right","SUCCESS"],

"hip_tr"=>
    ["trees.ss",1,"","insert","SUCCESS"],